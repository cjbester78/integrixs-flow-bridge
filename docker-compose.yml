version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: integrix-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: integrixflowbridge
      POSTGRES_USER: integrix
      POSTGRES_PASSWORD: ${DB_PASSWORD:-B3st3r@01}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./integrix-flow-bridge-backend/db/src/main/resources/db/migration:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U integrix -d integrixflowbridge"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - integrix-network

  backend:
    build:
      context: ./integrix-flow-bridge-backend
      dockerfile: Dockerfile
    container_name: integrix-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Database configuration
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/integrixflowbridge
      SPRING_DATASOURCE_USERNAME: integrix
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD:-B3st3r@01}
      
      # Security configuration
      INTEGRIX_MASTER_KEY: ${MASTER_KEY:-CHANGE_ME_WITH_SECURE_RANDOM_KEY}
      JWT_SECRET: ${JWT_SECRET:-CHANGE_ME_WITH_VERY_LONG_RANDOM_STRING}
      
      # Email configuration
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_FROM: ${SMTP_FROM:-noreply@integrix.com}
      
      # System configuration
      SYSTEM_ENV: ${SYSTEM_ENV:-PRODUCTION}
      LOG_LEVEL_APP: ${LOG_LEVEL:-INFO}
      
      # JVM options
      JAVA_OPTS: -Xmx1024m -Xms512m
    volumes:
      - ./logs:/app/logs
      - ./certs:/app/certs
      - ./config:/app/config
    ports:
      - "${APP_PORT:-8080}:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - integrix-network

  # Optional: Frontend served by nginx
  frontend:
    image: nginx:alpine
    container_name: integrix-frontend
    restart: unless-stopped
    volumes:
      - ./integrix-flow-bridge-frontend/dist:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "${FRONTEND_PORT:-80}:80"
    depends_on:
      - backend
    networks:
      - integrix-network

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: integrix-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    networks:
      - integrix-network

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: integrix-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin123}
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    depends_on:
      - prometheus
    networks:
      - integrix-network

  # Optional: Mail server for development/testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: integrix-mailhog
    restart: unless-stopped
    ports:
      - "${MAILHOG_SMTP:-1025}:1025"
      - "${MAILHOG_UI:-8025}:8025"
    networks:
      - integrix-network

networks:
  integrix-network:
    driver: bridge

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
import{r as l}from"./react-vendor-pDgKdaAw.js";import{b as f}from"./businessComponentService-D5nYoXvc.js";import{a as i,l as o,L as c}from"./index-BgQC9CM8.js";import{s as S}from"./structureService-BR-S680W.js";class y{async getAdapters(t){try{const e=t?`/adapters?businessComponentId=${t}`:"/adapters";return await i.get(e)}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch adapters"}}}async getAdapterById(t){try{return await i.get(`/adapters/${t}`)}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch adapter"}}}async createAdapter(t){try{return await i.post("/adapters",t)}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to create adapter"}}}async updateAdapter(t,e){try{return await i.put(`/adapters/${t}`,e)}catch(s){return{success:!1,error:s instanceof Error?s.message:"Failed to update adapter"}}}async deleteAdapter(t){try{return await i.delete(`/adapters/${t}`),{success:!0}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to delete adapter"}}}async getAdapterLogs(t,e){try{const s=new URLSearchParams;s.append("page","0"),s.append("size",e?.limit?.toString()||"50"),e?.level?.length&&s.append("level",e.level.join(",")),e?.dateFrom&&s.append("dateFrom",e.dateFrom),e?.dateTo&&s.append("dateTo",e.dateTo),e?.search&&s.append("search",e.search);const u=s.toString()?`?${s.toString()}`:"",d=await i.get(`/adapters/${t}/logs${u}`);return d.success&&d.data?{success:!0,data:(d.data.content||[]).map(r=>({id:r.id,timestamp:r.timestamp,level:(r.level||"INFO").toLowerCase(),message:r.message,adapterId:t,details:r.details?typeof r.details=="string"?JSON.parse(r.details):r.details:void 0,adapterName:r.sourceName,correlationId:r.correlationId,duration:void 0}))}:d}catch(s){return{success:!1,error:s instanceof Error?s.message:"Failed to fetch adapter logs"}}}async getAvailableAdapterTypes(){try{return await i.get("/admin/adapter-types")}catch(t){return{success:!1,error:t instanceof Error?t.message:"Failed to fetch available adapter types"}}}async testAdapterConnection(t){try{return await i.post(`/adapters/${t}/test`),{success:!0}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to test adapter connection"}}}}const I=new y,w=()=>{const[m,t]=l.useState([]),[e,s]=l.useState(!0);l.useEffect(()=>{u()},[]);const u=async()=>{try{o.info(c.BUSINESS_LOGIC,"Loading businessComponent data...");const n=await f.getAllBusinessComponents();if(n.success&&n.data){o.info(c.BUSINESS_LOGIC,"API businessComponents loaded",{data:n.data});const r=Array.isArray(n.data)?n.data:[];o.info(c.BUSINESS_LOGIC,`API returned ${r.length} business components`),t(r)}else o.info(c.BUSINESS_LOGIC,"API failed, showing empty business components list"),t([])}catch(n){o.error(c.BUSINESS_LOGIC,"Error loading business components",{error:n}),t([])}finally{s(!1)}};return{businessComponents:m,loading:e,getAdaptersForBusinessComponent:async n=>{try{const r=await I.getAdapters(n);if(r.success&&r.data&&Array.isArray(r.data)){const p=r.data.map(a=>a?.id).filter(a=>a!=null);return[...new Set(p)]}}catch(r){o.error(c.BUSINESS_LOGIC,"Error getting adapters for business component",{error:r})}return[]},getStructuresForBusinessComponent:async n=>{try{const r=await S.getStructures();if(r.success&&r.data){const p=r.data.structures||r.data;return Array.isArray(p)?p.filter(a=>!a||typeof a!="object"?(o.warn(c.BUSINESS_LOGIC,"Invalid structure object",{data:a}),!1):a.businessComponentId===n).map(a=>a.id).filter(a=>a!=null):(o.warn(c.BUSINESS_LOGIC,"Structures is not an array",{data:p}),[])}}catch(r){return o.error(c.BUSINESS_LOGIC,"Error getting structures for business component",{error:r}),[]}},refreshData:u}};export{I as a,w as u};
